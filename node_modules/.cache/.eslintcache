[{"/Users/scottdonnan/Development/code/flatiron-projects/phase-2/dictionary-thesaurus/src/index.js":"1","/Users/scottdonnan/Development/code/flatiron-projects/phase-2/dictionary-thesaurus/src/App.js":"2","/Users/scottdonnan/Development/code/flatiron-projects/phase-2/dictionary-thesaurus/src/Components/WordCard.jsx":"3","/Users/scottdonnan/Development/code/flatiron-projects/phase-2/dictionary-thesaurus/src/Components/FavoriteList.jsx":"4","/Users/scottdonnan/Development/code/flatiron-projects/phase-2/dictionary-thesaurus/src/Components/Search.jsx":"5","/Users/scottdonnan/Development/code/flatiron-projects/phase-2/dictionary-thesaurus/src/Components/WordOfTheDay.jsx":"6","/Users/scottdonnan/Development/code/flatiron-projects/phase-2/dictionary-thesaurus/src/Components/ThesaurusCard.jsx":"7","/Users/scottdonnan/Development/code/flatiron-projects/phase-2/dictionary-thesaurus/src/Components/NewUserForm.jsx":"8","/Users/scottdonnan/Development/code/flatiron-projects/phase-2/dictionary-thesaurus/src/Components/NavBar.jsx":"9","/Users/scottdonnan/Development/code/flatiron-projects/phase-2/dictionary-thesaurus/src/styled/card.js":"10","/Users/scottdonnan/Development/code/flatiron-projects/phase-2/dictionary-thesaurus/src/Components/History.jsx":"11"},{"size":473,"mtime":1649089764821,"results":"12","hashOfConfig":"13"},{"size":6549,"mtime":1651683175017,"results":"14","hashOfConfig":"13"},{"size":3327,"mtime":1649089764820,"results":"15","hashOfConfig":"13"},{"size":617,"mtime":1649089764819,"results":"16","hashOfConfig":"13"},{"size":3242,"mtime":1651685136851,"results":"17","hashOfConfig":"13"},{"size":2506,"mtime":1649089764821,"results":"18","hashOfConfig":"13"},{"size":530,"mtime":1649089764820,"results":"19","hashOfConfig":"13"},{"size":3039,"mtime":1649089764820,"results":"20","hashOfConfig":"13"},{"size":3089,"mtime":1649089764819,"results":"21","hashOfConfig":"13"},{"size":586,"mtime":1649089764822,"results":"22","hashOfConfig":"13"},{"size":210,"mtime":1651683977714,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1816aw8",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/scottdonnan/Development/code/flatiron-projects/phase-2/dictionary-thesaurus/src/index.js",[],["50","51"],"/Users/scottdonnan/Development/code/flatiron-projects/phase-2/dictionary-thesaurus/src/App.js",["52","53","54"],"/Users/scottdonnan/Development/code/flatiron-projects/phase-2/dictionary-thesaurus/src/Components/WordCard.jsx",["55","56","57"],"import { useState } from \"react\"\nimport Card from \"../styled/card\"\nimport styled from \"styled-components\"\n\nfunction WordCard({handleDeleteFavorite, searchWord, loggedInUser, addWordToFavorites, favoriteWords, setSearchWord}) {\n\n    const subdirectory = searchWord.hwi?.prs[0].sound.audio[0]\n    const soundFile = searchWord.hwi?.prs[0].sound.audio \n    const audioElement = new Audio(`https://media.merriam-webster.com/audio/prons/en/us/mp3/${subdirectory}/${soundFile}.mp3`)\n\n    let isImage = true\n    let image\n\n    const searchWordOrg = searchWord.hwi.hw\n    const searchWordName = searchWordOrg.replace('*', '')\n\n    if(searchWord.art?.artid) {\n    isImage = true\n    const imageDirectory = searchWord.art.artid \n    image = `https://www.merriam-webster.com/assets/mw/static/art/dict/${imageDirectory}.gif`\n    } else {\n    isImage = false\n    }\n    \n    const wordToBeFavorite = { name: searchWord.meta.id, pronunciation: searchWord.hwi.prs[0].mw }\n\n    const playAudio = () => { audioElement.play() }\n\n   \n    const favNameList = favoriteWords.map(fav => fav.name)\n    const favoriteButton = <div>{favNameList?.includes(searchWord.meta.id) ? <LikeButton onClick={() => findFavoriteToDelete(wordToBeFavorite.name)}>'‚ù§Ô∏è'</LikeButton> : \n        <LikeButton onClick={() => addWordToFavorites(wordToBeFavorite, loggedInUser)}>'ü§ç'</LikeButton>}</div>\n   \n    function findFavoriteToDelete(favoriteToRemove) {\n       const favorite = favoriteWords.find(fav => fav.name === favoriteToRemove)\n       handleDeleteFavorite(favorite)\n    }\n  \n   let count = 1\n    return(\n        <Card>\n            <h2>{searchWordName} \n                {loggedInUser ? favoriteButton : null}\n            </h2>\n            <h3>{searchWord.hwi.prs[0].mw}</h3>\n            <PlayButton onClick={playAudio}>Say Word</PlayButton>\n            {searchWord.shortdef.map((word, index) => {\n                return <p key={index}>Definition {count}: {word}</p>\n                console.log('counter', count)\n                count = count + 1\n                })}\n            {isImage ? <img src={image}/> : null}\n            <button onClick={() => setSearchWord('')}>minimize</button>            \n        </Card>\n    )\n}\n\nexport default WordCard\n\nconst PlayButton = styled.button`\n    background-image: linear-gradient(to right, #2BC0E4 0%, #EAECC6  51%, #2BC0E4  100%)}  \n    padding: 15px 45px;\n    text-align: center;\n    text-transform: uppercase;\n    font-family: Helvetica; sans-serif;\n    transition: 0.5s;\n    background-size: 200% auto;\n    color: black;            \n    box-shadow: 0 0 20px #eee;\n    border-radius: 10px;\n    display: center;\n          }\n\n          &:hover {\n            background-position: right center; \n            color: #fff;\n            text-decoration: none;       \n`\n\nconst LikeButton = styled.button`\n    background-image: linear-gradient(to right, #2BC0E4 0%, #EAECC6  51%, #2BC0E4  100%)}  \n    padding: 15px;\n    text-align: center;\n    text-transform: uppercase;\n    font-family: Helvetica; sans-serif;\n    transition: 0.5s;\n    background-size: 200% auto;\n    color: black;            \n    box-shadow: 0 0 20px #eee;\n    border-radius: 10px;\n    display: center;\n          }\n\n          &:hover {\n            background-position: right center; \n            color: #fff;\n            text-decoration: none;       \n`","/Users/scottdonnan/Development/code/flatiron-projects/phase-2/dictionary-thesaurus/src/Components/FavoriteList.jsx",["58","59"],"import { useEffect, useState } from \"react\"\nimport Card from \"../styled/card\"\n\nfunction FavoriteList({handleDeleteFavorite, loggedInUser, favoriteWords}) {\n\n    let listOfFavorites =\n        favoriteWords.map(word => {\n        return <li key={word.id}>\n                    {word.name}\n                    <button onClick={() => handleDeleteFavorite(word)}>‚ùå</button>\n                </li>\n        })\n    \n    return(\n        <Card>\n            <h2>{loggedInUser ? `${loggedInUser.username}'s Favorite Words` : 'Favorite Words'}</h2>\n            {listOfFavorites}\n        </Card>\n    )\n}\n\nexport default FavoriteList","/Users/scottdonnan/Development/code/flatiron-projects/phase-2/dictionary-thesaurus/src/Components/Search.jsx",[],"/Users/scottdonnan/Development/code/flatiron-projects/phase-2/dictionary-thesaurus/src/Components/WordOfTheDay.jsx",["60","61"],"\nimport Card from \"../styled/card\"\nimport {useEffect, useState} from 'react'\nimport { generateSlug } from \"random-word-slugs\"\nimport styled from \"styled-components\"\n\nfunction WordOfTheDay() {\n    const [randomWord, setRandomWord] = useState(\n        [\n          { art: { \n            artid: ''},\n            hwi: \n            {hw: '', \n              prs: [ {mw: '',\n                        sound: {\n                          audio: \"\"\n                        }} ],},\n            shortdef: [] },\n        ])\n    const slug = generateSlug(1)\n    \n    useEffect(() => {\n        fetch(`https://dictionaryapi.com/api/v3/references/collegiate/json/${slug}?key=818a2b96-1647-4667-8769-8f3de5ad1509`)\n        .then(r => r.json())\n        .then(data => {\n        setRandomWord(data)\n        })\n    }, [])\n    \n    const subdirectory = randomWord[0].hwi.prs[0].sound.audio[0]\n    const soundFile = randomWord[0].hwi.prs[0].sound.audio \n    const audioElement = new Audio(`https://media.merriam-webster.com/audio/prons/en/us/mp3/${subdirectory}/${soundFile}.mp3`)\n\n    let isImage = true\n    let image\n\n    const randomWordOrg = randomWord[0].hwi.hw\n    const randomWordName = randomWordOrg.replace('*', '')\n\n    if(randomWord[0].art?.artid) {\n     isImage = true\n     const imageDirectory = randomWord[0].art.artid \n     image = `https://www.merriam-webster.com/assets/mw/static/art/dict/${imageDirectory}.gif`\n    } else {\n        isImage = false\n    }\n\n    const playAudio = () => {\n        audioElement.play()\n    }\n    \n  \n\n     return(\n         <Card>\n             <h1>Your Random Word!</h1>\n             <h2>{randomWordName}</h2>\n             <h3>{randomWord[0].hwi.prs[0].mw}</h3>\n             <PlayButton onClick={playAudio}>Say Word</PlayButton>\n             {randomWord[0].shortdef.map((word, index) => <p key={index}>{word}</p>)}\n             {isImage ? <img src={image}/> : null}\n         </Card>\n     )\n}\n\nexport default WordOfTheDay\n\nconst PlayButton = styled.button`\n    background-image: linear-gradient(to right, #2BC0E4 0%, #EAECC6  51%, #2BC0E4  100%)}  \n    padding: 15px 45px;\n    text-align: center;\n    text-transform: uppercase;\n    font-family: Helvetica; sans-serif;\n    transition: 0.5s;\n    background-size: 200% auto;\n    color: black;            \n    box-shadow: 0 0 20px #eee;\n    border-radius: 10px;\n    display: center;\n          }\n\n          &:hover {\n            background-position: right center; \n            color: #fff;\n            text-decoration: none;\n          \n         \n`","/Users/scottdonnan/Development/code/flatiron-projects/phase-2/dictionary-thesaurus/src/Components/ThesaurusCard.jsx",[],"/Users/scottdonnan/Development/code/flatiron-projects/phase-2/dictionary-thesaurus/src/Components/NewUserForm.jsx",[],"/Users/scottdonnan/Development/code/flatiron-projects/phase-2/dictionary-thesaurus/src/Components/NavBar.jsx",[],"/Users/scottdonnan/Development/code/flatiron-projects/phase-2/dictionary-thesaurus/src/styled/card.js",[],"/Users/scottdonnan/Development/code/flatiron-projects/phase-2/dictionary-thesaurus/src/Components/History.jsx",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":17,"column":19,"nodeType":"68","messageId":"69","endLine":17,"endColumn":29},{"ruleId":"66","severity":1,"message":"70","line":19,"column":19,"nodeType":"68","messageId":"69","endLine":19,"endColumn":29},{"ruleId":"71","severity":1,"message":"72","line":184,"column":168,"nodeType":"73","messageId":"74","endLine":184,"endColumn":185},{"ruleId":"66","severity":1,"message":"75","line":1,"column":10,"nodeType":"68","messageId":"69","endLine":1,"endColumn":18},{"ruleId":"76","severity":1,"message":"77","line":49,"column":17,"nodeType":"78","messageId":"79","endLine":50,"endColumn":34},{"ruleId":"80","severity":1,"message":"81","line":52,"column":24,"nodeType":"82","endLine":52,"endColumn":42},{"ruleId":"66","severity":1,"message":"83","line":1,"column":10,"nodeType":"68","messageId":"69","endLine":1,"endColumn":19},{"ruleId":"66","severity":1,"message":"75","line":1,"column":21,"nodeType":"68","messageId":"69","endLine":1,"endColumn":29},{"ruleId":"84","severity":1,"message":"85","line":28,"column":8,"nodeType":"86","endLine":28,"endColumn":10,"suggestions":"87"},{"ruleId":"80","severity":1,"message":"81","line":61,"column":25,"nodeType":"82","endLine":61,"endColumn":43},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'setFavList' is assigned a value but never used.","Identifier","unusedVar","'setIsLiked' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useState' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.","ArrayExpression",["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [slug]",{"range":"93","text":"94"},[791,793],"[slug]"]