{"ast":null,"code":"var _jsxFileName = \"/Users/scottdonnan/Development/code/flatiron-projects/phase-2/phase-2-project-dictionary/dictionary-phase-2/src/Components/WordCard.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Card from \"../styled/card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WordCard({\n  searchWord,\n  addFavorite,\n  isLoggedIn\n}) {\n  _s();\n\n  var _searchWord$art;\n\n  const [isLiked, setIsLiked] = useState(true);\n  const [likedWord, setLikedWord] = useState('');\n  const subdirectory = searchWord.hwi.prs[0].sound.audio[0];\n  const soundFile = searchWord.hwi.prs[0].sound.audio;\n  const audioElement = new Audio(`https://media.merriam-webster.com/audio/prons/en/us/mp3/${subdirectory}/${soundFile}.mp3`);\n  let isImage = true;\n  let image;\n  const searchWordOrg = searchWord.hwi.hw;\n  const searchWordName = searchWordOrg.replace('*', '');\n\n  if ((_searchWord$art = searchWord.art) === null || _searchWord$art === void 0 ? void 0 : _searchWord$art.artid) {\n    isImage = true;\n    const imageDirectory = searchWord.art.artid;\n    image = `https://www.merriam-webster.com/assets/mw/static/art/dict/${imageDirectory}.gif`;\n  } else {\n    isImage = false;\n  }\n\n  const likedObj = {\n    name: searchWordName,\n    pronunciation: searchWord.hwi.prs[0].mw\n  };\n\n  const handleLike = () => {\n    if (isLoggedIn === false) {\n      alert(\"Please Log In\");\n    } else {\n      setIsLiked(!isLiked);\n    }\n\n    if (isLiked === true) {\n      addFavorite(likedObj);\n    } else if (isLiked === false) {\n      console.log('nothing to add here!');\n    }\n  };\n\n  const playAudio = () => {\n    audioElement.play();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [searchWordName, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLike,\n        children: isLiked ? 'ü§ç' : '‚ù§Ô∏è'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: searchWord.hwi.prs[0].mw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: playAudio,\n      children: \"Say Word\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), searchWord.shortdef.map((word, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: word\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 55\n    }, this)), isImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 24\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WordCard, \"vxIGo3dR/O6bE5GCXqqS/tmgD1M=\");\n\n_c = WordCard;\nexport default WordCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordCard\");","map":{"version":3,"sources":["/Users/scottdonnan/Development/code/flatiron-projects/phase-2/phase-2-project-dictionary/dictionary-phase-2/src/Components/WordCard.jsx"],"names":["useState","Card","WordCard","searchWord","addFavorite","isLoggedIn","isLiked","setIsLiked","likedWord","setLikedWord","subdirectory","hwi","prs","sound","audio","soundFile","audioElement","Audio","isImage","image","searchWordOrg","hw","searchWordName","replace","art","artid","imageDirectory","likedObj","name","pronunciation","mw","handleLike","alert","console","log","playAudio","play","shortdef","map","word","index"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA,UAAD;AAAaC,EAAAA,WAAb;AAA0BC,EAAAA;AAA1B,CAAlB,EAAyD;AAAA;;AAAA;;AACrD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AAED,QAAMU,YAAY,GAAGP,UAAU,CAACQ,GAAX,CAAeC,GAAf,CAAmB,CAAnB,EAAsBC,KAAtB,CAA4BC,KAA5B,CAAkC,CAAlC,CAArB;AACA,QAAMC,SAAS,GAAGZ,UAAU,CAACQ,GAAX,CAAeC,GAAf,CAAmB,CAAnB,EAAsBC,KAAtB,CAA4BC,KAA9C;AACA,QAAME,YAAY,GAAG,IAAIC,KAAJ,CAAW,2DAA0DP,YAAa,IAAGK,SAAU,MAA/F,CAArB;AAEA,MAAIG,OAAO,GAAG,IAAd;AACA,MAAIC,KAAJ;AAEA,QAAMC,aAAa,GAAGjB,UAAU,CAACQ,GAAX,CAAeU,EAArC;AACA,QAAMC,cAAc,GAAGF,aAAa,CAACG,OAAd,CAAsB,GAAtB,EAA2B,EAA3B,CAAvB;;AAEA,yBAAGpB,UAAU,CAACqB,GAAd,oDAAG,gBAAgBC,KAAnB,EAA0B;AACzBP,IAAAA,OAAO,GAAG,IAAV;AACA,UAAMQ,cAAc,GAAGvB,UAAU,CAACqB,GAAX,CAAeC,KAAtC;AACAN,IAAAA,KAAK,GAAI,6DAA4DO,cAAe,MAApF;AACA,GAJD,MAIO;AACHR,IAAAA,OAAO,GAAG,KAAV;AACH;;AAED,QAAMS,QAAQ,GAAG;AAAEC,IAAAA,IAAI,EAAEN,cAAR;AACEO,IAAAA,aAAa,EAAE1B,UAAU,CAACQ,GAAX,CAAeC,GAAf,CAAmB,CAAnB,EAAsBkB;AADvC,GAAjB;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACrB,QAAG1B,UAAU,KAAK,KAAlB,EAAyB;AACrB2B,MAAAA,KAAK,CAAC,eAAD,CAAL;AACF,KAFF,MAEQ;AACHzB,MAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH;;AAEF,QAAIA,OAAO,KAAK,IAAhB,EAAqB;AACjBF,MAAAA,WAAW,CAACuB,QAAD,CAAX;AACH,KAFD,MAEO,IAAIrB,OAAO,KAAK,KAAhB,EAAsB;AACzB2B,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;AACJ,GAZD;;AAiBA,QAAMC,SAAS,GAAG,MAAM;AACpBnB,IAAAA,YAAY,CAACoB,IAAb;AACH,GAFD;;AAMC,sBACI,QAAC,IAAD;AAAA,4BACI;AAAA,iBAAKd,cAAL,oBAAqB;AAAQ,QAAA,OAAO,EAAES,UAAjB;AAAA,kBAA8BzB,OAAO,GAAG,IAAH,GAAU;AAA/C;AAAA;AAAA;AAAA;AAAA,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKH,UAAU,CAACQ,GAAX,CAAeC,GAAf,CAAmB,CAAnB,EAAsBkB;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEK,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAIKhC,UAAU,CAACkC,QAAX,CAAoBC,GAApB,CAAwB,CAACC,IAAD,EAAOC,KAAP,kBAAiB;AAAA,gBAAgBD;AAAhB,OAAQC,KAAR;AAAA;AAAA;AAAA;AAAA,YAAzC,CAJL,EAKKtB,OAAO,gBAAG;AAAK,MAAA,GAAG,EAAEC;AAAV;AAAA;AAAA;AAAA;AAAA,YAAH,GAAwB,IALpC;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GA1DQjB,Q;;KAAAA,Q;AA4DT,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\"\nimport Card from \"../styled/card\"\n\nfunction WordCard({searchWord, addFavorite, isLoggedIn}) {\n    const [isLiked, setIsLiked] = useState(true)\n    const [likedWord, setLikedWord] = useState('')\n\n   const subdirectory = searchWord.hwi.prs[0].sound.audio[0]\n   const soundFile = searchWord.hwi.prs[0].sound.audio \n   const audioElement = new Audio(`https://media.merriam-webster.com/audio/prons/en/us/mp3/${subdirectory}/${soundFile}.mp3`)\n\n   let isImage = true\n   let image\n\n   const searchWordOrg = searchWord.hwi.hw\n   const searchWordName = searchWordOrg.replace('*', '')\n\n   if(searchWord.art?.artid) {\n    isImage = true\n    const imageDirectory = searchWord.art.artid \n    image = `https://www.merriam-webster.com/assets/mw/static/art/dict/${imageDirectory}.gif`\n   } else {\n       isImage = false\n   }\n    \n   const likedObj = { name: searchWordName,\n                      pronunciation: searchWord.hwi.prs[0].mw\n                    }\n\n   const handleLike = () => {\n       if(isLoggedIn === false) {\n           alert(\"Please Log In\")\n        } else {\n            setIsLiked(!isLiked)\n        }\n       \n       if (isLiked === true){\n           addFavorite(likedObj)\n       } else if (isLiked === false){\n           console.log('nothing to add here!')\n       }\n   }\n   \n   \n\n\n   const playAudio = () => {\n       audioElement.play()\n   }\n\n  \n\n    return(\n        <Card>\n            <h2>{searchWordName} <button onClick={handleLike}>{isLiked ? 'ü§ç' : '‚ù§Ô∏è' }</button></h2>\n            <h3>{searchWord.hwi.prs[0].mw}</h3>\n            <button onClick={playAudio}>Say Word</button>\n            {searchWord.shortdef.map((word, index) => <p key={index}>{word}</p>)}\n            {isImage ? <img src={image}/> : null}            \n        </Card>\n    )\n}\n\nexport default WordCard"]},"metadata":{},"sourceType":"module"}