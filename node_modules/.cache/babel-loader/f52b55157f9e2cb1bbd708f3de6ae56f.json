{"ast":null,"code":"var _jsxFileName = \"/Users/scottdonnan/Development/code/flatiron-projects/phase-2/phase-2-project-dictionary/dictionary-phase-2/src/Components/WordCard.jsx\";\nimport { useState } from \"react\";\nimport Card from \"../styled/card\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WordCard({\n  isLiked,\n  searchWord,\n  addWordToDatabase,\n  isLoggedIn,\n  loggedInUser\n}) {\n  var _searchWord$hwi, _searchWord$hwi2, _searchWord$art;\n\n  // const [isLiked, setIsLiked] = useState(true)\n  const subdirectory = (_searchWord$hwi = searchWord.hwi) === null || _searchWord$hwi === void 0 ? void 0 : _searchWord$hwi.prs[0].sound.audio[0];\n  const soundFile = (_searchWord$hwi2 = searchWord.hwi) === null || _searchWord$hwi2 === void 0 ? void 0 : _searchWord$hwi2.prs[0].sound.audio;\n  const audioElement = new Audio(`https://media.merriam-webster.com/audio/prons/en/us/mp3/${subdirectory}/${soundFile}.mp3`);\n  let isImage = true;\n  let image;\n  const searchWordOrg = searchWord.hwi.hw;\n  const searchWordName = searchWordOrg.replace('*', '');\n\n  if ((_searchWord$art = searchWord.art) === null || _searchWord$art === void 0 ? void 0 : _searchWord$art.artid) {\n    isImage = true;\n    const imageDirectory = searchWord.art.artid;\n    image = `https://www.merriam-webster.com/assets/mw/static/art/dict/${imageDirectory}.gif`;\n  } else {\n    isImage = false;\n  }\n\n  const wordToBeFavorite = {\n    name: searchWord.meta.id,\n    pronunciation: searchWord.hwi.prs[0].mw\n  }; //    const handleLike = () => {       \n  //        if (isLiked === true){\n  //            addWordToDatabase(likedObj)\n  //        } else if (isLiked === false){\n  //            console.log('nothing to add here!')\n  //        }\n  //    }\n\n  const playAudio = () => {\n    audioElement.play();\n  };\n\n  let count = 1;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [searchWordName, isLiked ? /*#__PURE__*/_jsxDEV(LikeButton, {\n        onClick: () => addWordToDatabase(wordToBeFavorite, loggedInUser.id),\n        children: isLiked ? '‚ù§Ô∏è' : 'ü§ç'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 28\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: searchWord.hwi.prs[0].mw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PlayButton, {\n      onClick: playAudio,\n      children: \"Say Word\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), searchWord.shortdef.map((word, index) => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Definition \", count, \": \", word]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 24\n      }, this);\n      console.log('counter', count);\n      count = count + 1;\n    }), isImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 24\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_c = WordCard;\nexport default WordCard;\nconst PlayButton = styled.button`\n    background-image: linear-gradient(to right, #2BC0E4 0%, #EAECC6  51%, #2BC0E4  100%)}  \n    padding: 15px 45px;\n    text-align: center;\n    text-transform: uppercase;\n    font-family: Helvetica; sans-serif;\n    transition: 0.5s;\n    background-size: 200% auto;\n    color: black;            \n    box-shadow: 0 0 20px #eee;\n    border-radius: 10px;\n    display: center;\n          }\n\n          &:hover {\n            background-position: right center; \n            color: #fff;\n            text-decoration: none;       \n`;\n_c2 = PlayButton;\nconst LikeButton = styled.button`\n    background-image: linear-gradient(to right, #2BC0E4 0%, #EAECC6  51%, #2BC0E4  100%)}  \n    padding: 15px;\n    text-align: center;\n    text-transform: uppercase;\n    font-family: Helvetica; sans-serif;\n    transition: 0.5s;\n    background-size: 200% auto;\n    color: black;            \n    box-shadow: 0 0 20px #eee;\n    border-radius: 10px;\n    display: center;\n          }\n\n          &:hover {\n            background-position: right center; \n            color: #fff;\n            text-decoration: none;       \n`;\n_c3 = LikeButton;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"WordCard\");\n$RefreshReg$(_c2, \"PlayButton\");\n$RefreshReg$(_c3, \"LikeButton\");","map":{"version":3,"sources":["/Users/scottdonnan/Development/code/flatiron-projects/phase-2/phase-2-project-dictionary/dictionary-phase-2/src/Components/WordCard.jsx"],"names":["useState","Card","styled","WordCard","isLiked","searchWord","addWordToDatabase","isLoggedIn","loggedInUser","subdirectory","hwi","prs","sound","audio","soundFile","audioElement","Audio","isImage","image","searchWordOrg","hw","searchWordName","replace","art","artid","imageDirectory","wordToBeFavorite","name","meta","id","pronunciation","mw","playAudio","play","count","shortdef","map","word","index","console","log","PlayButton","button","LikeButton"],"mappings":"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","sourcesContent":["import { useState } from \"react\"\nimport Card from \"../styled/card\"\nimport styled from \"styled-components\"\n\nfunction WordCard({isLiked, searchWord, addWordToDatabase, isLoggedIn, loggedInUser}) {\n    // const [isLiked, setIsLiked] = useState(true)\n\n   const subdirectory = searchWord.hwi?.prs[0].sound.audio[0]\n   const soundFile = searchWord.hwi?.prs[0].sound.audio \n   const audioElement = new Audio(`https://media.merriam-webster.com/audio/prons/en/us/mp3/${subdirectory}/${soundFile}.mp3`)\n\n   let isImage = true\n   let image\n\n   const searchWordOrg = searchWord.hwi.hw\n   const searchWordName = searchWordOrg.replace('*', '')\n\n   if(searchWord.art?.artid) {\n    isImage = true\n    const imageDirectory = searchWord.art.artid \n    image = `https://www.merriam-webster.com/assets/mw/static/art/dict/${imageDirectory}.gif`\n   } else {\n       isImage = false\n   }\n    \n   const wordToBeFavorite = { name: searchWord.meta.id,\n                      pronunciation: searchWord.hwi.prs[0].mw\n                    }\n//    const handleLike = () => {       \n//        if (isLiked === true){\n//            addWordToDatabase(likedObj)\n//        } else if (isLiked === false){\n//            console.log('nothing to add here!')\n//        }\n//    }\n   \n   \n\n\n   const playAudio = () => {\n       audioElement.play()\n   }\n\n  \n   let count = 1\n    return(\n        <Card>\n            <h2>{searchWordName} \n                {isLiked ? <LikeButton onClick={() => addWordToDatabase(wordToBeFavorite, loggedInUser.id)}>{isLiked ? '‚ù§Ô∏è' : 'ü§ç' }</LikeButton> : null}\n            </h2>\n            <h3>{searchWord.hwi.prs[0].mw}</h3>\n            <PlayButton onClick={playAudio}>Say Word</PlayButton>\n            {searchWord.shortdef.map((word, index) => {\n                return <p key={index}>Definition {count}: {word}</p>\n                console.log('counter', count)\n                count = count + 1\n                })}\n            {isImage ? <img src={image}/> : null}            \n        </Card>\n    )\n}\n\nexport default WordCard\n\nconst PlayButton = styled.button`\n    background-image: linear-gradient(to right, #2BC0E4 0%, #EAECC6  51%, #2BC0E4  100%)}  \n    padding: 15px 45px;\n    text-align: center;\n    text-transform: uppercase;\n    font-family: Helvetica; sans-serif;\n    transition: 0.5s;\n    background-size: 200% auto;\n    color: black;            \n    box-shadow: 0 0 20px #eee;\n    border-radius: 10px;\n    display: center;\n          }\n\n          &:hover {\n            background-position: right center; \n            color: #fff;\n            text-decoration: none;       \n`\n\nconst LikeButton = styled.button`\n    background-image: linear-gradient(to right, #2BC0E4 0%, #EAECC6  51%, #2BC0E4  100%)}  \n    padding: 15px;\n    text-align: center;\n    text-transform: uppercase;\n    font-family: Helvetica; sans-serif;\n    transition: 0.5s;\n    background-size: 200% auto;\n    color: black;            \n    box-shadow: 0 0 20px #eee;\n    border-radius: 10px;\n    display: center;\n          }\n\n          &:hover {\n            background-position: right center; \n            color: #fff;\n            text-decoration: none;       \n`"]},"metadata":{},"sourceType":"module"}