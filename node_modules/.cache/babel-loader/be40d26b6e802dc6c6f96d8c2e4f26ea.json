{"ast":null,"code":"var _jsxFileName = \"/Users/scottdonnan/Development/code/flatiron-projects/phase-2/phase-2-project-dictionary/dictionary-phase-2/src/Components/NewUserForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Card from '../styled/card';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewUserForm() {\n  _s();\n\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: '',\n    passwordConfirmation: ''\n  });\n  const history = useHistory();\n\n  const routeChange = () => {\n    let path = './';\n    history.push(path);\n  };\n\n  function handleChange(e) {\n    setCredentials({ ...credentials,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    addUser(credentials.username, credentials.password, credentials.passwordConfirmation);\n    alert('Thank you for signing up to use the dictionary.');\n  }\n\n  function addUser(username, password, passConfirmation) {\n    const userObj = {\n      username: username,\n      password: password,\n      password_confirmation: passConfirmation\n    };\n    console.log(username, password, passConfirmation);\n    fetch('signup', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userObj)\n    }).then(resp => {\n      if (resp.ok) {\n        resp.json().then(newUser => {\n          console.log(newUser);\n          routeChange();\n        });\n      } else {\n        resp.json().then(data => alert(data.errors));\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        onChange: handleChange,\n        value: credentials.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"password\",\n        onChange: handleChange,\n        value: credentials.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirm Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"passwordConfirmation\",\n        onChange: handleChange,\n        value: credentials.passwordConfirmation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        name: \"Submit\",\n        value: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewUserForm, \"xfrwFXXS45CEmoKXu1zVdDRd6Ho=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewUserForm;\nexport default NewUserForm;\nconst Form = styled.form`\nfont-family: Helvetica, sans-serif;\n;\n\n& input {\n    font-family: Helvetica, sans-serif;\n    margin: 10px\n    height: 30px;\n    border-radius: 15px;\n}\n\n& button {\n        background-color: ##5CD64C;\n        font-family: Helvetica\n        color: black;\n        padding: 10px;\n        border-radius: 10px;\n        text-decoration: none;\n\n    }\n\n& button:hover {\n        color: white;\n        background-color: #3165a5;\n    }\n`;\n_c2 = Form;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NewUserForm\");\n$RefreshReg$(_c2, \"Form\");","map":{"version":3,"sources":["/Users/scottdonnan/Development/code/flatiron-projects/phase-2/phase-2-project-dictionary/dictionary-phase-2/src/Components/NewUserForm.jsx"],"names":["useState","useHistory","Card","styled","NewUserForm","credentials","setCredentials","username","password","passwordConfirmation","history","routeChange","path","push","handleChange","e","target","name","value","handleSubmit","preventDefault","addUser","alert","passConfirmation","userObj","password_confirmation","console","log","fetch","method","headers","body","JSON","stringify","then","resp","ok","json","newUser","data","errors","Form","form"],"mappings":"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","sourcesContent":["\nimport { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Card from '../styled/card'\nimport styled from 'styled-components'\n\nfunction NewUserForm() {\n    const [credentials, setCredentials] =useState({\n        username: '',\n        password: '',\n        passwordConfirmation: '',\n    })\n    \n    const history = useHistory()\n\n    const routeChange = () => {\n        let path = './'\n        history.push(path)\n    }\n\n    function handleChange(e) {\n        setCredentials({\n            ...credentials, \n            [e.target.name]: e.target.value\n        })\n    }\n\n    function handleSubmit(e){\n        e.preventDefault()\n        addUser(credentials.username, credentials.password, credentials.passwordConfirmation)\n        alert('Thank you for signing up to use the dictionary.')\n    }\n\n    function addUser(username, password, passConfirmation){\n        const userObj = {\n            username: username,\n            password: password,\n            password_confirmation: passConfirmation \n        }\n\n        console.log(username, password, passConfirmation);\n\n        fetch('signup', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(userObj)\n        })\n        .then(resp => {\n            if (resp.ok) {\n                resp.json().then(newUser => {\n                    console.log(newUser)\n                    routeChange()\n                })\n            } else {\n                resp.json().then(data => alert(data.errors))\n            }\n        })\n    }\n        \n\n\n    return(\n        <Card>\n            <Form onSubmit={handleSubmit}>\n                <label>Username: </label>\n                <input type=\"text\" name=\"username\" onChange={handleChange} value={credentials.username} />\n                <br/>\n                <label>Password: </label>\n                <input type=\"text\" name=\"password\" onChange={handleChange} value={credentials.password} />\n                <br/>\n                <label>Confirm Password: </label>\n                <input type=\"text\" name=\"passwordConfirmation\" onChange={handleChange} value={credentials.passwordConfirmation} />\n                <br/>\n                <input type=\"submit\" name=\"Submit\" value=\"Create\"/>\n            </Form>\n        </Card>\n    )\n}\n\nexport default NewUserForm\n\nconst Form = styled.form `\nfont-family: Helvetica, sans-serif;\n;\n\n& input {\n    font-family: Helvetica, sans-serif;\n    margin: 10px\n    height: 30px;\n    border-radius: 15px;\n}\n\n& button {\n        background-color: ##5CD64C;\n        font-family: Helvetica\n        color: black;\n        padding: 10px;\n        border-radius: 10px;\n        text-decoration: none;\n\n    }\n\n& button:hover {\n        color: white;\n        background-color: #3165a5;\n    }\n`"]},"metadata":{},"sourceType":"module"}