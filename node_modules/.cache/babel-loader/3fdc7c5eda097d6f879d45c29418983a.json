{"ast":null,"code":"var _jsxFileName = \"/Users/scottdonnan/Development/code/flatiron-projects/phase-2/phase-2-project-dictionary/dictionary-phase-2/src/Components/FavoriteList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Card from \"../styled/card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FavoriteList({\n  handleDeleteFavorite,\n  favList,\n  grabFavorites,\n  isLoggedIn,\n  loggedInUser\n}) {\n  _s();\n\n  const [favoriteWords, setFavoriteWords] = useState([]);\n  useEffect(() => {\n    if (isLoggedIn === true) {\n      fetch(`users/favorite_words/${loggedInUser.id}`).then(resp => resp.json()).then(words => setFavoriteWords(words));\n    }\n  }, [isLoggedIn]);\n  let listOfFavorites = favoriteWords.map(word => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: word.name\n    }, word.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this);\n  }); // favList.map(fav=>\n  //     <>\n  //         <li key={fav.id}>\n  //             {fav.name}\n  //             <button onClick={() => handleDeleteFavorite(fav.favoriteID)}>❌</button>\n  //         </li>\n  //     </>\n  // )\n\n  if (isLoggedIn === false) {\n    listOfFavorites = [null];\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isLoggedIn ? `${loggedInUser.username}'s Favorite Words` : 'Favorite Words'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), listOfFavorites]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FavoriteList, \"rTa1OSCVjkddnY2Gl+kTbOxod2A=\");\n\n_c = FavoriteList;\nexport default FavoriteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FavoriteList\");","map":{"version":3,"sources":["/Users/scottdonnan/Development/code/flatiron-projects/phase-2/phase-2-project-dictionary/dictionary-phase-2/src/Components/FavoriteList.jsx"],"names":["useEffect","useState","Card","FavoriteList","handleDeleteFavorite","favList","grabFavorites","isLoggedIn","loggedInUser","favoriteWords","setFavoriteWords","fetch","id","then","resp","json","words","listOfFavorites","map","word","name","username"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;;AAEA,SAASC,YAAT,CAAsB;AAACC,EAAAA,oBAAD;AAAuBC,EAAAA,OAAvB;AAAgCC,EAAAA,aAAhC;AAA+CC,EAAAA,UAA/C;AAA2DC,EAAAA;AAA3D,CAAtB,EAAgG;AAAA;;AAC5F,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGO,UAAU,KAAK,IAAlB,EAAuB;AACnBI,MAAAA,KAAK,CAAE,wBAAuBH,YAAY,CAACI,EAAG,EAAzC,CAAL,CACCC,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,KAAK,IAAIN,gBAAgB,CAACM,KAAD,CAF/B;AAGH;AACJ,GANQ,EAMP,CAACT,UAAD,CANO,CAAT;AAWA,MAAIU,eAAe,GACfR,aAAa,CAACS,GAAd,CAAkBC,IAAI,IAAI;AAC1B,wBAAO;AAAA,gBACGA,IAAI,CAACC;AADR,OAASD,IAAI,CAACP,EAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AAIC,GALD,CADJ,CAd4F,CAsB5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAIL,UAAU,KAAK,KAAnB,EAAyB;AACrBU,IAAAA,eAAe,GAAG,CAAC,IAAD,CAAlB;AACC;;AAGL,sBACI,QAAC,IAAD;AAAA,4BACI;AAAA,gBAAKV,UAAU,GAAI,GAAEC,YAAY,CAACa,QAAS,mBAA5B,GAAiD;AAAhE;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKJ,eAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA3CQd,Y;;KAAAA,Y;AA6CT,eAAeA,YAAf","sourcesContent":["import { useEffect, useState } from \"react\"\nimport Card from \"../styled/card\"\n\nfunction FavoriteList({handleDeleteFavorite, favList, grabFavorites, isLoggedIn, loggedInUser}) {\n    const [favoriteWords, setFavoriteWords] = useState([])\n\n    useEffect(()=>{\n        if(isLoggedIn === true){ \n            fetch(`users/favorite_words/${loggedInUser.id}`)\n            .then(resp => resp.json())\n            .then(words => setFavoriteWords(words))\n        } \n    },[isLoggedIn]) \n    \n    \n\n\n    let listOfFavorites =\n        favoriteWords.map(word => {\n        return <li key={word.id}>\n                 {word.name}\n               {/* <button onClick={() => handleDeleteFavorite(fav.favoriteID)}>❌</button> */}\n            </li>\n        })\n\n    // favList.map(fav=>\n    //     <>\n    //         <li key={fav.id}>\n    //             {fav.name}\n    //             <button onClick={() => handleDeleteFavorite(fav.favoriteID)}>❌</button>\n    //         </li>\n    //     </>\n    // )\n        \n    \n    if (isLoggedIn === false){\n        listOfFavorites = [null]\n        }\n\n    \n    return(\n        <Card>\n            <h2>{isLoggedIn ? `${loggedInUser.username}'s Favorite Words` : 'Favorite Words'}</h2>\n            {listOfFavorites}\n        </Card>\n    )\n}\n\nexport default FavoriteList"]},"metadata":{},"sourceType":"module"}