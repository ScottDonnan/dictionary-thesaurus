{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.totalUniqueSlugs = exports.generateSlug = void 0;\n\nvar words_1 = require(\"./words\");\n\nvar DEFAULT_NUMBER_OF_WORDS = 3;\n\nfunction generateSlug(numberOfWords, options) {\n  var numWords = numberOfWords || DEFAULT_NUMBER_OF_WORDS;\n  var defaultOptions = {\n    partsOfSpeech: getDefaultPartsOfSpeech(numWords),\n    categories: {},\n    format: \"kebab\"\n  };\n\n  var opts = __assign(__assign({}, defaultOptions), options);\n\n  var words = [];\n\n  for (var i = 0; i < numWords; i++) {\n    var partOfSpeech = opts.partsOfSpeech[i];\n    var candidates = words_1.getWordsByCategory(opts.partsOfSpeech[i], opts.categories[partOfSpeech]);\n    var rand = candidates[Math.floor(Math.random() * candidates.length)];\n    words.push(rand);\n  }\n\n  return formatter(words, opts.format);\n}\n\nexports.generateSlug = generateSlug;\n\nfunction getDefaultPartsOfSpeech(length) {\n  var partsOfSpeech = [];\n\n  for (var i = 0; i < length - 1; i++) {\n    partsOfSpeech.push(\"adjective\");\n  }\n\n  partsOfSpeech.push(\"noun\");\n  return partsOfSpeech;\n}\n\nfunction formatter(arr, format) {\n  if (format === \"kebab\") {\n    return arr.join(\"-\").toLowerCase();\n  }\n\n  if (format === \"camel\") {\n    return arr.map(function (el, i) {\n      if (i === 0) return el.toLowerCase();\n      return el[0].toUpperCase() + el.slice(1).toLowerCase();\n    }).join(\"\");\n  }\n\n  if (format === \"lower\") {\n    return arr.join(\" \").toLowerCase();\n  }\n\n  if (format === \"sentence\") {\n    return arr.map(function (el, i) {\n      if (i === 0) {\n        return el[0].toUpperCase() + el.slice(1).toLowerCase();\n      }\n\n      return el;\n    }).join(\" \");\n  }\n\n  return arr.map(function (el) {\n    return el[0].toUpperCase() + el.slice(1).toLowerCase();\n  }).join(\" \");\n}\n\nfunction totalUniqueSlugs(numberOfWords, options) {\n  var _a, _b;\n\n  var numAdjectives = words_1.getWordsByCategory(\"adjective\", (_a = options === null || options === void 0 ? void 0 : options.categories) === null || _a === void 0 ? void 0 : _a.adjective).length;\n  var numNouns = words_1.getWordsByCategory(\"noun\", (_b = options === null || options === void 0 ? void 0 : options.categories) === null || _b === void 0 ? void 0 : _b.noun).length;\n  var nums = {\n    adjective: numAdjectives,\n    noun: numNouns\n  };\n  var numWords = numberOfWords || DEFAULT_NUMBER_OF_WORDS;\n  var partsOfSpeech = (options === null || options === void 0 ? void 0 : options.partsOfSpeech) || getDefaultPartsOfSpeech(numWords);\n  var combos = 1;\n\n  for (var i = 0; i < numWords; i++) {\n    combos *= nums[partsOfSpeech[i]];\n  }\n\n  return combos;\n}\n\nexports.totalUniqueSlugs = totalUniqueSlugs;","map":{"version":3,"sources":["/Users/scottdonnan/Development/code/flatiron-projects/phase-2/dictionary-thesaurus/node_modules/random-word-slugs/dist/index.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","defineProperty","exports","value","totalUniqueSlugs","generateSlug","words_1","require","DEFAULT_NUMBER_OF_WORDS","numberOfWords","options","numWords","defaultOptions","partsOfSpeech","getDefaultPartsOfSpeech","categories","format","opts","words","partOfSpeech","candidates","getWordsByCategory","rand","Math","floor","random","push","formatter","arr","join","toLowerCase","map","el","toUpperCase","slice","_a","_b","numAdjectives","adjective","numNouns","noun","nums","combos"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.totalUniqueSlugs = exports.generateSlug = void 0;\nvar words_1 = require(\"./words\");\nvar DEFAULT_NUMBER_OF_WORDS = 3;\nfunction generateSlug(numberOfWords, options) {\n    var numWords = numberOfWords || DEFAULT_NUMBER_OF_WORDS;\n    var defaultOptions = {\n        partsOfSpeech: getDefaultPartsOfSpeech(numWords),\n        categories: {},\n        format: \"kebab\",\n    };\n    var opts = __assign(__assign({}, defaultOptions), options);\n    var words = [];\n    for (var i = 0; i < numWords; i++) {\n        var partOfSpeech = opts.partsOfSpeech[i];\n        var candidates = words_1.getWordsByCategory(opts.partsOfSpeech[i], opts.categories[partOfSpeech]);\n        var rand = candidates[Math.floor(Math.random() * candidates.length)];\n        words.push(rand);\n    }\n    return formatter(words, opts.format);\n}\nexports.generateSlug = generateSlug;\nfunction getDefaultPartsOfSpeech(length) {\n    var partsOfSpeech = [];\n    for (var i = 0; i < length - 1; i++) {\n        partsOfSpeech.push(\"adjective\");\n    }\n    partsOfSpeech.push(\"noun\");\n    return partsOfSpeech;\n}\nfunction formatter(arr, format) {\n    if (format === \"kebab\") {\n        return arr.join(\"-\").toLowerCase();\n    }\n    if (format === \"camel\") {\n        return arr\n            .map(function (el, i) {\n            if (i === 0)\n                return el.toLowerCase();\n            return el[0].toUpperCase() + el.slice(1).toLowerCase();\n        })\n            .join(\"\");\n    }\n    if (format === \"lower\") {\n        return arr.join(\" \").toLowerCase();\n    }\n    if (format === \"sentence\") {\n        return arr\n            .map(function (el, i) {\n            if (i === 0) {\n                return el[0].toUpperCase() + el.slice(1).toLowerCase();\n            }\n            return el;\n        })\n            .join(\" \");\n    }\n    return arr\n        .map(function (el) {\n        return el[0].toUpperCase() + el.slice(1).toLowerCase();\n    })\n        .join(\" \");\n}\nfunction totalUniqueSlugs(numberOfWords, options) {\n    var _a, _b;\n    var numAdjectives = words_1.getWordsByCategory(\"adjective\", (_a = options === null || options === void 0 ? void 0 : options.categories) === null || _a === void 0 ? void 0 : _a.adjective).length;\n    var numNouns = words_1.getWordsByCategory(\"noun\", (_b = options === null || options === void 0 ? void 0 : options.categories) === null || _b === void 0 ? void 0 : _b.noun).length;\n    var nums = {\n        adjective: numAdjectives,\n        noun: numNouns,\n    };\n    var numWords = numberOfWords || DEFAULT_NUMBER_OF_WORDS;\n    var partsOfSpeech = (options === null || options === void 0 ? void 0 : options.partsOfSpeech) || getDefaultPartsOfSpeech(numWords);\n    var combos = 1;\n    for (var i = 0; i < numWords; i++) {\n        combos *= nums[partsOfSpeech[i]];\n    }\n    return combos;\n}\nexports.totalUniqueSlugs = totalUniqueSlugs;\n"]},"metadata":{},"sourceType":"script"}