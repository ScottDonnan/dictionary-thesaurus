{"ast":null,"code":"var _jsxFileName = \"/Users/scottdonnan/Development/code/flatiron-projects/phase-2/phase-2-project-dictionary/dictionary-phase-2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport Search from './Components/Search';\nimport WordOfTheDay from './Components/WordOfTheDay';\nimport FavoriteList from './Components/FavoriteList';\nimport NavBar from './Components/NavBar';\nimport NewUserForm from './Components/NewUserForm';\nimport WordCard from './Components/WordCard';\nimport ThesaurusCard from './Components/ThesaurusCard';\nimport { Route, Switch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [searchWord, setSearchWord] = useState('');\n  const [loggedInUser, setLoggedInUser] = useState([{}]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [favList, setFavList] = useState([]);\n  const [thesaurusSearchWord, setThesaurusSearchWord] = useState(\"\");\n\n  function getWordDefinition(searchValue) {\n    fetch(`https://dictionaryapi.com/api/v3/references/collegiate/json/${searchValue}?key=818a2b96-1647-4667-8769-8f3de5ad1509`).then(r => r.json()).then(data => setSearchWord(data));\n  }\n\n  function getWordSynonym(searchValue) {\n    fetch(`https://dictionaryapi.com/api/v3/references/thesaurus/json/${searchValue}?key=bf67571a-955e-4874-aa11-d4d40d976166`).then(r => r.json()).then(data => setThesaurusSearchWord(data));\n  }\n\n  function userLogin(e, creds) {\n    e.preventDefault();\n    fetch(`http://localhost:3001/users?username=${creds.username}`).then(r => r.json()).then(users => {\n      if (users.length > 0) {\n        setLoggedInUser(users);\n        setIsLoggedIn(true);\n        alert('good job brother u logged in');\n      } else {\n        alert('try again buddy');\n      }\n    });\n  }\n\n  const addFavorite = word => {\n    fetch('http://localhost:3001/words', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(word)\n    }).then(res => res.json()).then(word => linkedFavorites(word));\n  };\n\n  const linkedFavorites = word => {\n    const userFavObj = {\n      userId: loggedInUser[0].id,\n      wordId: word.id\n    };\n    fetch('http://localhost:3001/favorites', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userFavObj)\n    }).then(res => res.json()).then(userFav => grabFavorites());\n  };\n\n  function getFavoriteArray() {\n    data.forEach(objs => {\n      fetch(`http://localhost:3001/words/${objs.wordId}`).then(res => res.json()).then(data => setFavList(value => [...value, data]));\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/newuser\",\n        children: /*#__PURE__*/_jsxDEV(NewUserForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/randomword\",\n        children: /*#__PURE__*/_jsxDEV(WordOfTheDay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {\n          userLogin: userLogin,\n          loggedInUser: loggedInUser,\n          setIsLoggedIn: setIsLoggedIn,\n          isLoggedIn: isLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Search, {\n          getWordDefinition: getWordDefinition,\n          getWordSynonym: getWordSynonym,\n          setSearchWord: setSearchWord,\n          setThesaurusSearchWord: setThesaurusSearchWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), searchWord ? /*#__PURE__*/_jsxDEV(WordCard, {\n          searchWord: searchWord[0],\n          addFavorite: addFavorite,\n          isLoggedIn: isLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 26\n        }, this) : null, thesaurusSearchWord ? /*#__PURE__*/_jsxDEV(ThesaurusCard, {\n          thesaurusSearchWord: thesaurusSearchWord[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 35\n        }, this) : null, /*#__PURE__*/_jsxDEV(FavoriteList, {\n          getFavoriteArray: getFavoriteArray,\n          handleDeleteFavorite: handleDeleteFavorite,\n          favList: favList,\n          grabFavorites: grabFavorites,\n          isLoggedIn: isLoggedIn,\n          loggedInUser: loggedInUser[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"jLNBvK+gA0aL0FEvOA4bmSkfRwM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/scottdonnan/Development/code/flatiron-projects/phase-2/phase-2-project-dictionary/dictionary-phase-2/src/App.js"],"names":["React","useState","Search","WordOfTheDay","FavoriteList","NavBar","NewUserForm","WordCard","ThesaurusCard","Route","Switch","App","searchWord","setSearchWord","loggedInUser","setLoggedInUser","isLoggedIn","setIsLoggedIn","favList","setFavList","thesaurusSearchWord","setThesaurusSearchWord","getWordDefinition","searchValue","fetch","then","r","json","data","getWordSynonym","userLogin","e","creds","preventDefault","username","users","length","alert","addFavorite","word","method","headers","body","JSON","stringify","res","linkedFavorites","userFavObj","userId","id","wordId","userFav","grabFavorites","getFavoriteArray","forEach","objs","value","handleDeleteFavorite"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport Search from './Components/Search';\nimport WordOfTheDay from './Components/WordOfTheDay';\nimport FavoriteList from './Components/FavoriteList';\nimport NavBar from './Components/NavBar';\nimport NewUserForm from './Components/NewUserForm';\nimport WordCard from './Components/WordCard';\nimport ThesaurusCard from './Components/ThesaurusCard';\nimport { Route, Switch } from 'react-router-dom'\n\n\nfunction App() {\n  const [searchWord, setSearchWord] = useState('')\n  const [loggedInUser, setLoggedInUser] = useState([{}])\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [favList, setFavList] = useState([])\n  const [thesaurusSearchWord, setThesaurusSearchWord] = useState(\"\")\n \n  \n  function getWordDefinition(searchValue) {\n    fetch(`https://dictionaryapi.com/api/v3/references/collegiate/json/${searchValue}?key=818a2b96-1647-4667-8769-8f3de5ad1509`)\n    .then(r => r.json())\n    .then(data => setSearchWord(data))\n  }\n\n  function getWordSynonym(searchValue) {\n    fetch(`https://dictionaryapi.com/api/v3/references/thesaurus/json/${searchValue}?key=bf67571a-955e-4874-aa11-d4d40d976166`)\n    .then(r => r.json())\n    .then(data => setThesaurusSearchWord(data))\n  }\n\n  function userLogin(e, creds) {\n    e.preventDefault()\n    fetch(`http://localhost:3001/users?username=${creds.username}`)\n    .then(r=>r.json())\n    .then(users => {\n      if(users.length > 0){\n        setLoggedInUser(users)\n        setIsLoggedIn(true)\n        alert('good job brother u logged in')\n      } else {\n        alert('try again buddy')\n      }\n    }) \n  }\n\n\n  const addFavorite = (word) => { \n    fetch('http://localhost:3001/words', {\n      method: 'POST', \n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(word)\n      }\n    )\n    .then(res=>res.json())\n    .then(word=>linkedFavorites(word))\n  }\n\n  \n  const linkedFavorites = (word) => {\n    const userFavObj ={\n      userId: loggedInUser[0].id,\n      wordId: word.id\n        }\n      fetch('http://localhost:3001/favorites', {\n        method: 'POST',\n        headers: {\n          'Content-Type':'application/json'\n        },\n        body: JSON.stringify(userFavObj)\n      })\n      .then(res=>res.json())\n      .then(userFav => grabFavorites())\n      \n  }\n\n  function getFavoriteArray() {  data.forEach(objs=>{ \n      fetch(`http://localhost:3001/words/${objs.wordId}`)\n      .then(res=>res.json())\n      .then(data=> setFavList(value=>[...value, data]))\n    })}\n  \n  return (\n    <div>\n      <Switch>\n          <Route path=\"/newuser\">\n            <NewUserForm />\n          </Route>\n          <Route path=\"/randomword\">\n            <WordOfTheDay />\n          </Route>\n          <Route path=\"/\">\n            <NavBar userLogin={userLogin} loggedInUser={loggedInUser} setIsLoggedIn={setIsLoggedIn} isLoggedIn={isLoggedIn} />\n            <Search getWordDefinition={getWordDefinition} getWordSynonym={getWordSynonym} setSearchWord={setSearchWord} setThesaurusSearchWord={setThesaurusSearchWord}/> \n            {searchWord? <WordCard searchWord={searchWord[0]} addFavorite={addFavorite} isLoggedIn={isLoggedIn}/> : null}\n            {thesaurusSearchWord? <ThesaurusCard thesaurusSearchWord={thesaurusSearchWord[0]} /> : null}\n            <FavoriteList getFavoriteArray={getFavoriteArray} handleDeleteFavorite={handleDeleteFavorite} favList={favList} grabFavorites={grabFavorites} isLoggedIn={isLoggedIn} loggedInUser={loggedInUser[0]}/>\n          </Route>\n        </Switch>\n    </div>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}