{"ast":null,"code":"var _jsxFileName = \"/Users/scottdonnan/Development/code/flatiron-projects/phase-2/phase-2-project-dictionary/dictionary-phase-2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport Search from './Components/Search';\nimport WordOfTheDay from './Components/WordOfTheDay';\nimport FavoriteList from './Components/FavoriteList';\nimport NavBar from './Components/NavBar';\nimport NewUserForm from './Components/NewUserForm';\nimport WordCard from './Components/WordCard';\nimport ThesaurusCard from './Components/ThesaurusCard';\nimport { Route, Switch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [searchWord, setSearchWord] = useState('');\n  const [loggedInUser, setLoggedInUser] = useState([{}]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [favList, setFavList] = useState([]);\n  const [thesaurusSearchWord, setThesaurusSearchWord] = useState(\"\");\n  const [favoriteArray, setFavoriteArray] = useState([]);\n\n  function getWordDefinition(searchValue) {\n    fetch(`https://dictionaryapi.com/api/v3/references/collegiate/json/${searchValue}?key=818a2b96-1647-4667-8769-8f3de5ad1509`).then(r => r.json()).then(data => setSearchWord(data));\n  }\n\n  function getWordSynonym(searchValue) {\n    fetch(`https://dictionaryapi.com/api/v3/references/thesaurus/json/${searchValue}?key=bf67571a-955e-4874-aa11-d4d40d976166`).then(r => r.json()).then(data => setThesaurusSearchWord(data));\n  }\n\n  function userLogin(e, creds) {\n    e.preventDefault();\n    fetch(\"users/1\").then(resp => {\n      if (resp.ok) {\n        resp.json().then(user => {\n          setLoggedInUser(user);\n          setIsLoggedIn(true);\n        });\n      } else {\n        resp.json().then(data => alert(data));\n      }\n    });\n  } // if(users.length > 0){\n  //   setLoggedInUser(users)\n  //   setIsLoggedIn(true)\n  //   alert('good job brother u logged in')\n\n\n  const addWordToDatabase = (favoritedWordObj, userId) => {\n    fetch('words', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(favoritedWordObj)\n    }).then(res => res.json()).then(word => linkedFavorites(wordObj, userId));\n  };\n\n  const linkedFavorites = (wordObj, userId) => {\n    const userFavObj = {\n      user_id: userId,\n      word_id: wordObj.id\n    };\n    fetch('favorites', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userFavObj)\n    }).then(res => res.json()); // .then(userFav => grabFavorites())\n  }; // const grabFavorites = () => {\n  //   setFavList(value => value = [])\n  //   fetch(`http://localhost:3001/user/${loggedInUser.id}/favorites?_expand=words`)\n  //   .then(res=>res.json())\n  //   .then(data => anotherFunction(data))\n  // }\n\n\n  const anotherFunction = data => {\n    data.forEach(objs => {\n      fetch(`http://localhost:3001/words/${objs.wordId}`).then(res => res.json()).then(data => {\n        const favObj = { ...data,\n          favoriteID: objs.id\n        };\n        setFavList(value => [...value, favObj]);\n      });\n    });\n  };\n\n  function handleDeleteFavorite(favID) {\n    fetch(`http://localhost:3001/favorites/${favID}`, {\n      method: 'DELETE'\n    }); // .then(grabFavorites())\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/newuser\",\n        children: /*#__PURE__*/_jsxDEV(NewUserForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/randomword\",\n        children: /*#__PURE__*/_jsxDEV(WordOfTheDay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {\n          userLogin: userLogin,\n          loggedInUser: loggedInUser,\n          setIsLoggedIn: setIsLoggedIn,\n          isLoggedIn: isLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Search, {\n          getWordDefinition: getWordDefinition,\n          getWordSynonym: getWordSynonym,\n          setSearchWord: setSearchWord,\n          setThesaurusSearchWord: setThesaurusSearchWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), searchWord ? /*#__PURE__*/_jsxDEV(WordCard, {\n          searchWord: searchWord[0],\n          addWordToDatabase: addWordToDatabase,\n          isLoggedIn: isLoggedIn,\n          loggedInUser: loggedInUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 26\n        }, this) : null, thesaurusSearchWord ? /*#__PURE__*/_jsxDEV(ThesaurusCard, {\n          thesaurusSearchWord: thesaurusSearchWord[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 35\n        }, this) : null, /*#__PURE__*/_jsxDEV(FavoriteList, {\n          handleDeleteFavorite: handleDeleteFavorite,\n          favList: favList,\n          isLoggedIn: isLoggedIn,\n          loggedInUser: loggedInUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"SUw8SMup8I0KOz5z7STLUcWqjYE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/scottdonnan/Development/code/flatiron-projects/phase-2/phase-2-project-dictionary/dictionary-phase-2/src/App.js"],"names":["React","useState","Search","WordOfTheDay","FavoriteList","NavBar","NewUserForm","WordCard","ThesaurusCard","Route","Switch","App","searchWord","setSearchWord","loggedInUser","setLoggedInUser","isLoggedIn","setIsLoggedIn","favList","setFavList","thesaurusSearchWord","setThesaurusSearchWord","favoriteArray","setFavoriteArray","getWordDefinition","searchValue","fetch","then","r","json","data","getWordSynonym","userLogin","e","creds","preventDefault","resp","ok","user","alert","addWordToDatabase","favoritedWordObj","userId","method","headers","body","JSON","stringify","res","word","linkedFavorites","wordObj","userFavObj","user_id","word_id","id","anotherFunction","forEach","objs","wordId","favObj","favoriteID","value","handleDeleteFavorite","favID"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport Search from './Components/Search';\nimport WordOfTheDay from './Components/WordOfTheDay';\nimport FavoriteList from './Components/FavoriteList';\nimport NavBar from './Components/NavBar';\nimport NewUserForm from './Components/NewUserForm';\nimport WordCard from './Components/WordCard';\nimport ThesaurusCard from './Components/ThesaurusCard';\nimport { Route, Switch } from 'react-router-dom'\n\n\nfunction App() {\n  const [searchWord, setSearchWord] = useState('')\n  const [loggedInUser, setLoggedInUser] = useState([{}])\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [favList, setFavList] = useState([])\n  const [thesaurusSearchWord, setThesaurusSearchWord] = useState(\"\")\n  const [favoriteArray, setFavoriteArray] = useState([])\n \n  \n  function getWordDefinition(searchValue) {\n    fetch(`https://dictionaryapi.com/api/v3/references/collegiate/json/${searchValue}?key=818a2b96-1647-4667-8769-8f3de5ad1509`)\n    .then(r => r.json())\n    .then(data => setSearchWord(data))\n  }\n\n  function getWordSynonym(searchValue) {\n    fetch(`https://dictionaryapi.com/api/v3/references/thesaurus/json/${searchValue}?key=bf67571a-955e-4874-aa11-d4d40d976166`)\n    .then(r => r.json())\n    .then(data => setThesaurusSearchWord(data))\n  }\n\n  function userLogin(e, creds) {\n    e.preventDefault()\n    fetch(\"users/1\")\n    .then(resp=>{\n      if (resp.ok) {\n        resp.json().then(user => {\n          setLoggedInUser(user)\n          setIsLoggedIn(true)\n        })\n      } else {\n        resp.json().then(data => alert(data))\n      }\n    })}\n\n      // if(users.length > 0){\n      //   setLoggedInUser(users)\n      //   setIsLoggedIn(true)\n      //   alert('good job brother u logged in')\n     \n\n\n  const addWordToDatabase = (favoritedWordObj, userId) => { \n    fetch('words', {\n      method: 'POST', \n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(favoritedWordObj)\n      }\n    )\n    .then(res=>res.json())\n    .then(word=>linkedFavorites(wordObj, userId))\n  }\n\n  \n  const linkedFavorites = (wordObj, userId) => {\n    const userFavObj ={\n      user_id: userId,\n      word_id: wordObj.id\n        }\n      fetch('favorites', {\n        method: 'POST',\n        headers: {\n          'Content-Type':'application/json'\n        },\n        body: JSON.stringify(userFavObj)\n      })\n      .then(res=>res.json())\n      // .then(userFav => grabFavorites())\n      \n  }\n\n  // const grabFavorites = () => {\n  //   setFavList(value => value = [])\n  //   fetch(`http://localhost:3001/user/${loggedInUser.id}/favorites?_expand=words`)\n  //   .then(res=>res.json())\n  //   .then(data => anotherFunction(data))\n  // }\n      \n\n  const anotherFunction = (data) => {\n      data.forEach(objs=>{ \n      fetch(`http://localhost:3001/words/${objs.wordId}`)\n      .then(res=>res.json())\n      .then(data=> {\n        const favObj = {...data, favoriteID: objs.id}\n        setFavList(value=>[...value, favObj])})\n      })\n    }\n      \n\n  function handleDeleteFavorite(favID) {\n    fetch(`http://localhost:3001/favorites/${favID}`, {\n      method: 'DELETE'\n    })\n    // .then(grabFavorites())\n  }\n  \n  return (\n    <div>\n      <Switch>\n          <Route path=\"/newuser\">\n            <NewUserForm />\n          </Route>\n          <Route path=\"/randomword\">\n            <WordOfTheDay />\n          </Route>\n          <Route path=\"/\">\n            <NavBar userLogin={userLogin} loggedInUser={loggedInUser} setIsLoggedIn={setIsLoggedIn} isLoggedIn={isLoggedIn} />\n            <Search getWordDefinition={getWordDefinition} getWordSynonym={getWordSynonym} setSearchWord={setSearchWord} setThesaurusSearchWord={setThesaurusSearchWord}/> \n            {searchWord? <WordCard searchWord={searchWord[0]} addWordToDatabase={addWordToDatabase} isLoggedIn={isLoggedIn} loggedInUser={loggedInUser}/> : null}\n            {thesaurusSearchWord? <ThesaurusCard thesaurusSearchWord={thesaurusSearchWord[0]} /> : null}\n            <FavoriteList handleDeleteFavorite={handleDeleteFavorite} favList={favList} isLoggedIn={isLoggedIn} loggedInUser={loggedInUser}/>\n          </Route>\n        </Switch>\n    </div>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}