{"ast":null,"code":"var _jsxFileName = \"/Users/scottdonnan/Development/code/flatiron-projects/phase-2/phase-2-project-dictionary/dictionary-phase-2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Search from './Components/Search';\nimport WordOfTheDay from './Components/WordOfTheDay';\nimport FavoriteList from './Components/FavoriteList';\nimport NavBar from './Components/NavBar';\nimport { generateSlug } from \"random-word-slugs\";\nimport NewUserForm from './Components/NewUserForm';\nimport WordCard from './Components/WordCard';\nimport ThesaurusCard from './Components/ThesaurusCard';\nimport { Route, Switch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [showForm, setShowForm] = useState(false)\n  const [searchWord, setSearchWord] = useState('');\n  const [thesaurusSearchWord, setThesaurusSearchWord] = useState(\"\");\n  const [randomWord, setRandomWord] = useState([{\n    art: {\n      artid: ''\n    },\n    hwi: {\n      hw: '',\n      prs: [{\n        mw: '',\n        sound: {\n          audio: \"\"\n        }\n      }]\n    },\n    shortdef: []\n  }]);\n  const slug = generateSlug(1);\n  useEffect(() => {\n    fetch(`https://dictionaryapi.com/api/v3/references/collegiate/json/${slug}?key=818a2b96-1647-4667-8769-8f3de5ad1509`).then(r => r.json()).then(data => {\n      setRandomWord(data);\n      console.log(data);\n    });\n  }, []);\n\n  function getWordDefinition(searchValue) {\n    fetch(`https://dictionaryapi.com/api/v3/references/collegiate/json/${searchValue}?key=818a2b96-1647-4667-8769-8f3de5ad1509`).then(r => r.json()).then(data => setSearchWord(data));\n  }\n\n  function getWordSynonym(searchValue) {\n    fetch(`https://dictionaryapi.com/api/v3/references/thesaurus/json/${searchValue}?key=bf67571a-955e-4874-aa11-d4d40d976166`).then(r => r.json()).then(data => setThesaurusSearchWord(data));\n  }\n\n  function userLogin(e, creds) {\n    console.log(creds);\n    e.preventDefault();\n    fetch('http://localhost:3001/users').then(r => r.json()).then(users => {\n      console.log(users);\n      const userLogic = users.map(user => {\n        if (creds.username === user.username && creds.password === user.password) {\n          return user;\n        }\n      });\n      console.log(userLogic);\n    });\n  } // alert(`good job, ${creds.username}, you logged in dude`)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React-ionary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/newuser\",\n        children: /*#__PURE__*/_jsxDEV(NewUserForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {\n          userLogin: userLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Search, {\n          getWordDefinition: getWordDefinition,\n          getWordSynonym: getWordSynonym,\n          setSearchWord: setSearchWord,\n          setThesaurusSearchWord: setThesaurusSearchWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), searchWord ? /*#__PURE__*/_jsxDEV(WordCard, {\n          searchWord: searchWord[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 26\n        }, this) : null, thesaurusSearchWord ? /*#__PURE__*/_jsxDEV(ThesaurusCard, {\n          thesaurusSearchWord: thesaurusSearchWord[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 35\n        }, this) : null, /*#__PURE__*/_jsxDEV(WordOfTheDay, {\n          randomWord: randomWord[0],\n          setRandomWord: setRandomWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FavoriteList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xUNNwvEBsf+X4H/fwX6r1udBtWs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/scottdonnan/Development/code/flatiron-projects/phase-2/phase-2-project-dictionary/dictionary-phase-2/src/App.js"],"names":["React","useState","useEffect","Search","WordOfTheDay","FavoriteList","NavBar","generateSlug","NewUserForm","WordCard","ThesaurusCard","Route","Switch","App","searchWord","setSearchWord","thesaurusSearchWord","setThesaurusSearchWord","randomWord","setRandomWord","art","artid","hwi","hw","prs","mw","sound","audio","shortdef","slug","fetch","then","r","json","data","console","log","getWordDefinition","searchValue","getWordSynonym","userLogin","e","creds","preventDefault","users","userLogic","map","user","username","password"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport Search from './Components/Search';\nimport WordOfTheDay from './Components/WordOfTheDay';\nimport FavoriteList from './Components/FavoriteList';\nimport NavBar from './Components/NavBar';\nimport { generateSlug } from \"random-word-slugs\";\nimport NewUserForm from './Components/NewUserForm';\nimport WordCard from './Components/WordCard';\nimport ThesaurusCard from './Components/ThesaurusCard';\nimport { Route, Switch } from 'react-router-dom'\n\n\nfunction App() {\n  // const [showForm, setShowForm] = useState(false)\n  const [searchWord, setSearchWord] = useState('')\n  const [thesaurusSearchWord, setThesaurusSearchWord] = useState(\"\")\n  const [randomWord, setRandomWord] = useState(\n  [\n    { art: { \n      artid: ''},\n      hwi: \n      {hw: '', \n        prs: [ {mw: '',\n                  sound: {\n                    audio: \"\"\n                  }} ],},\n      shortdef: [] },\n  ])\n\n  const slug = generateSlug(1)\n\n  useEffect(() => {\n    fetch(`https://dictionaryapi.com/api/v3/references/collegiate/json/${slug}?key=818a2b96-1647-4667-8769-8f3de5ad1509`)\n    .then(r => r.json())\n    .then(data => {\n      setRandomWord(data)\n      console.log(data)\n    })\n  }, [])\n  \n  function getWordDefinition(searchValue) {\n    fetch(`https://dictionaryapi.com/api/v3/references/collegiate/json/${searchValue}?key=818a2b96-1647-4667-8769-8f3de5ad1509`)\n    .then(r => r.json())\n    .then(data => setSearchWord(data))\n  }\n\n  function getWordSynonym(searchValue) {\n    fetch(`https://dictionaryapi.com/api/v3/references/thesaurus/json/${searchValue}?key=bf67571a-955e-4874-aa11-d4d40d976166`)\n    .then(r => r.json())\n    .then(data => setThesaurusSearchWord(data))\n  }\n\n  function userLogin(e, creds) {\n    console.log(creds);\n    e.preventDefault()\n    fetch('http://localhost:3001/users')\n    .then(r=>r.json())\n    .then(users => {\n      console.log(users)\n      const userLogic = users.map(user => {\n        if(creds.username === user.username && creds.password === user.password) {\n          return user\n        }\n      })\n      console.log(userLogic)\n    }) \n    \n  }\n  \n  // alert(`good job, ${creds.username}, you logged in dude`)\n  \n\n  \n    \n\n  return (\n    <div>\n      <h1>React-ionary</h1>\n      <Switch>\n          <Route path=\"/newuser\">\n            <NewUserForm />\n          </Route>\n          <Route path=\"/\">\n            <NavBar userLogin={userLogin}/>\n            <Search getWordDefinition={getWordDefinition} getWordSynonym={getWordSynonym} setSearchWord={setSearchWord} setThesaurusSearchWord={setThesaurusSearchWord}/> \n            {searchWord? <WordCard searchWord={searchWord[0]}/> : null}\n            {thesaurusSearchWord? <ThesaurusCard thesaurusSearchWord={thesaurusSearchWord[0]} /> : null}\n\n            <WordOfTheDay randomWord={randomWord[0]} setRandomWord={setRandomWord} />\n            <FavoriteList />\n          </Route>\n        </Switch>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}